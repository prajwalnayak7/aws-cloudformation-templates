AWSTemplateFormatVersion: "2010-09-09"

Description: >
  "AWS CloudFormation template to create an API Gateway with Lambda integration."

Parameters:

  EnvName:
    Type: 'String'
    Description: 'The deployment environment name, used to differentiate between dev, staging, and production.'

  ApiName:
    Description: "Name for the API Gateway."
    Type: String
    Default: "MyApi"

  StageName:
    Description: "Name for the API Gateway stage."
    Type: String
    Default: "dev"

  LambdaFunctionName:
    Description: "Name of the Lambda function to integrate with the API Gateway."
    Type: String

Resources:

  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "${ApiName}-${EnvName}"
      Description: "API Gateway for My Application"

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: "myresource"

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: "GET"
      AuthorizationType: "NONE"
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS_PROXY"
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations"
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethod
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      StageName: !Ref StageName

Outputs:

  ApiUrl:
    Description: "URL of the deployed API Gateway."
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/myresource"
